name: End-to-end tests
on: []
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      # generate the list using a bash script
      - name: Create matrix âŠ¹
        id: prepare
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          n: 2 # number of containers to output

      - name: Print result ðŸ–¨
        run: echo '${{ steps.prepare.outputs.matrix }}'

      # by installing dependencies once
      # we cache them
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3
      - name: Install deps ðŸ“¦
        uses: cypress-io/github-action@v5
        with:
          runTests: false

  test-split:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Print GitHub variables ðŸ–¨
        run: npx @bahmutov/print-env GITHUB

      - name: Print GitHub strategy context ðŸ–¨
        run: echo '${{ toJSON(strategy) }}'

      - name: Run split Cypress tests ðŸ§ª
        uses: cypress-io/github-action@v5
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          DEBUG: cypress-split
        with:
          browser: chrome

      - uses: actions/upload-artifact@v3
        with:
          name: cypress-split-results-e2e-${{ strategy.job-index }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/results
          if-no-files-found: ignore
      # - run: yarn report:merge
      # - run: yarn report:mocha

      # - name: Reports deploy ðŸš€
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     branch: gh-pages
      #     folder: mochawesome-report
      #     ssh-key: ${{ secrets.DEPLOY_KEY }}

  merge-reports:
    needs: test-split
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3
      - name: Install dependencies ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          runTests: false
      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v3
        # download all test results artifacts from the previous jobs
        # it would be nice to download only the split jobs test artifacts
        # but cannot specify the pattern of the test artifacts yet
        # https://github.com/actions/download-artifact/issues/103
        with:
          path: split-results
      - name: Display structure of downloaded files
        run: ls -R split-results
  
      - name: Prepare folder
        run: |
          mkdir mochawesome
          mkdir -p mochawesome/screenshots
          mkdir -p mochawesome/videos
          mkdir -p mochawesome/results
      - name: Copy all assets and JSON reports
        run: |
          cp -r split-results/cypress-split-results-*/screenshots/* mochawesome/screenshots || true
          cp -r split-results/cypress-split-results-*/videos/* mochawesome/videos || true
          cp -r split-results/cypress-split-results-*/results/* mochawesome/results || true
      - name: Show copied files
        run: ls -lR mochawesome

      - name: Merge Mochawesome JSON reports
        # assuming the merge tool is installed
        run: npx mochawesome-merge mochawesome/results/*.json -o mochawesome/results/merged.json
      - name: Generate Mochawesome HTML report
        # assuming the merge tool is installed
        run: |
          npx marge mochawesome/results/merged.json \
            --charts true --showHooks always \
            --reportDir mochawesome/results \
            --reportFilename index.html

      - uses: actions/upload-artifact@v3
        with:
          name: merged-mochawesome-report
          path: mochawesome

  deploy-reports:
    needs: merge-reports
    runs-on: ubuntu-latest
    steps:
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: mochawesome
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          clean: true
